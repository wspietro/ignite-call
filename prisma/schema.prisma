// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Linguagem própria

model User {
  id         String  @id @default(uuid()) // primary-key, id com uuid
  username   String  @unique // não será permitido cadastro de nomes repetidos
  name       String
  bio        String?
  email      String? @unique
  avatar_url String?

  created_at DateTime @default(now())

  accounts      Account[]
  sessions      Session[]
  timeIntervals UserTimeInterval[] // não cria uma coluna no BD, o prisma utiliza interno, calmel case facilita a escrita o js

  @@map("users") // renomear tabela
}

// Adapter NextAuth
// Account é a integraçao de um usuário com algum provider (google)
// Um registro para cada provider
model Account {
  id                  String  @id @default(cuid())
  user_id             String
  type                String
  provider            String
  provider_account_id String
  refresh_token       String?
  access_token        String?
  expires_at          Int?
  token_type          String?
  scope               String?
  id_token            String?
  session_state       String?

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([provider, provider_account_id]) // forma um campo único
  @@map("accounts") // renomear tabela
}

// Cada vez que o usuário fizer login em uma máquina diferente, uma nova sessao é criada
model Session {
  id            String   @id @default(cuid())
  session_token String   @unique
  user_id       String
  expires       DateTime
  user          User     @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("sessions") // renomear tabela
}

model UserTimeInterval {
  // relacionado a um intervalo de tempo disponível ao usuário (7 dias, 7 registros)

  id                    String @id @default(uuid())
  week_day              Int
  time_start_in_minutes Int
  time_end_in_minutes   Int

  user    User   @relation(fields: [user_id], references: [id])
  user_id String // irá criar uma coluna na tabela

  @@map("user_time_intervals")
}
